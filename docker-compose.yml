services:
  postgres:
    image: postgres:17-alpine
    container_name: sleeper-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-sleeper_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-sleeper_password}
      POSTGRES_DB: ${POSTGRES_DB:-sleeper_db}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-sleeper_user} -d ${POSTGRES_DB:-sleeper_db}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - sleeper-net

  hasura:
    image: hasura/graphql-engine:v2.36.0
    container_name: sleeper-hasura
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://${POSTGRES_USER:-sleeper_user}:${POSTGRES_PASSWORD:-sleeper_password}@postgres:5432/${POSTGRES_DB:-sleeper_db}
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_ADMIN_SECRET:-changeme}
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: anonymous
      HASURA_GRAPHQL_ENABLE_TELEMETRY: "false"
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://${POSTGRES_USER:-sleeper_user}:${POSTGRES_PASSWORD:-sleeper_password}@postgres:5432/${POSTGRES_DB:-sleeper_db}
    networks:
      - sleeper-net

  docs:
    build:
      context: ./docs
      dockerfile: Dockerfile
    container_name: sleeper-docs
    restart: unless-stopped
    ports:
      - "8081:8080"
    networks:
      - sleeper-net

  sync:
    build:
      context: ./sleeper-sync
      dockerfile: Dockerfile
    container_name: sleeper-sync
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8082:8080"  # Webhook server port
      - "9090:9090"  # Metrics port
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-sleeper_password}
      WEBHOOK_SECRET: ${WEBHOOK_SECRET:-changeme}
      SLEEPER_DATABASE_HOST: postgres
      SLEEPER_DATABASE_PORT: 5432
      SLEEPER_DATABASE_DATABASE: ${POSTGRES_DB:-sleeper_db}
      SLEEPER_DATABASE_USER: ${POSTGRES_USER:-sleeper_user}
      SLEEPER_DATABASE_PASSWORD: ${POSTGRES_PASSWORD:-sleeper_password}
    volumes:
      - ./sleeper-sync/config.yaml:/app/config.yaml:ro
    networks:
      - sleeper-net

networks:
  sleeper-net:
    driver: bridge

volumes:
  postgres_data: